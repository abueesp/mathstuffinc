#######################################
## BC File - Programmable Calculator ##
##     without primes functions      ##
#######################################

###from https://github.com/abueesp/Scriptnstall/.bc
### MaxScale - Get the maximum scale from your GNU BC
### BC is currently only 32bit in all cases. 
### The package manager recognizes that it might have to install 32bit libraries for a 64 bit environment, but continue to be 32 bits libraries.
### That is why your maximum scale is always 2147483646, or 1111111111111111111111111111110 bits (check https://github.com/abueesp/mathstuffinc/blob/master/bitscalc.py). 
### If you try to add just 1 bit more, you will get a fatal error 'Out of memory for malloc'.
### Which explain that more memory can't be allocated, even if there is not an overflow because you are running a >32 bits computer.
define maxscale() {
  scale=2147483646
  print "Your scale is now at 2147483646 decimals (32 bits minus the 1 bit)\n"
}

###from phodd.net/gnu-bc/code/funcs.bc
### Funcs.BC - a large number of functions for use with GNU BC
  ## Not to be regarded as suitable for any purpose
  ## Not guaranteed to return correct answers
### A large suite of functions to complement the bc standard library. Unlike the standard library (activated with bc -l), all function names are spelled out in full. Full name aliases for the standard library functions are provided.
###    Integer and Rounding
###    Trigonometry
###    Hyperbolic Trigonometry
###    Exponential / Logarithms
###    Powers / Roots
###    Lambert W
###    Triangular numbers
###    Polygonal numbers
###    Tetrahedral numbers
###    Arithmetic-Geometric mean 
define pi() {
  auto s;
  if(scale==(s=scale(pi_)))return pi_
  if(scale<s)return pi_/1
  scale+=5;pi_
